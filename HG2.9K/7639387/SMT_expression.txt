(declare-fun decorator () String)
(declare-fun networkx () String)
(declare-fun mpmath () String)
(declare-fun sympy () String)
(declare-fun glpk () String)
(assert (let ((a!1 (or (= mpmath "1.4.0a1")
               (= mpmath "1.4.0a0")
               (= mpmath "1.3.0")
               (= mpmath "1.2.1")
               (= mpmath "1.1.0")
               (= mpmath "1.0.0")
               (= mpmath "0.19")
               (= mpmath "0.9")
               (= mpmath "0.8")
               (= mpmath "0.7")
               (= mpmath "0.6")
               (= mpmath "0.5")
               (= mpmath "0.4")
               (= mpmath "0.3")
               (= mpmath "0.2")))
      (a!2 (or (= decorator "5.1.1")
               (= decorator "5.1.0")
               (= decorator "5.0.9")
               (= decorator "5.0.8")
               (= decorator "5.0.7")
               (= decorator "5.0.6")
               (= decorator "5.0.5")
               (= decorator "5.0.4")
               (= decorator "5.0.3")
               (= decorator "4.4.2")
               (= decorator "4.4.1")
               (= decorator "4.4.0")
               (= decorator "4.3.2")
               (= decorator "4.3.1")
               (= decorator "4.3.0"))))
  (and (or (= sympy "1.5.1") (= sympy "1.5b1"))
       (or (= glpk "0.4.6"))
       (or (= networkx "2.5.1") (= networkx "2.5") (= networkx "2.5rc1"))
       (=> (= sympy "1.5.1") a!1)
       (=> (= sympy "1.5b1") a!1)
       (=> (= networkx "2.5.1")
           (or (= decorator "4.4.2")
               (= decorator "4.4.1")
               (= decorator "4.4.0")
               (= decorator "4.3.2")
               (= decorator "4.3.1")
               (= decorator "4.3.0")))
       (=> (= networkx "2.5") a!2)
       (=> (= networkx "2.5rc1") a!2))))
(check-sat)
