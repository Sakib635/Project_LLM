{
  "__future__": [
    "print_function"
  ],
  "keras": [
    "backend as K",
    "engine Input",
    "engine Model",
    "engine InputSpec",
    "layers Dense",
    "layers Activation",
    "layers Dropout",
    "layers Lambda",
    "layers Embedding",
    "layers LSTM",
    "optimizers Adam",
    "preprocessing sequence",
    "datasets imdb",
    "utils data_utils get_file"
  ],
  "numpy": [
    "numpy as np",
    "random random",
    "sys sys",
    "pdb pdb"
  ],
  "keras.backend": [
    "backend clear session",
    "backend eager_mode",
    "backend eager_executor_type",
    "backend get value",
    "backend get value array",
    "backend is tensor",
    "backend make callable",
    "backend name_scope",
    "backend parse_shape_or_tuple",
    "backend reset gradients",
    "backend set attr",
    "backend set value",
    "backend set value arr",
    "backend symbolic",
    "backend tensor copy",
    "backend tensor equal",
    "backend tensor equal array",
    "backend tensordot",
    "backend tiled",
    "backend to_dense",
    "backend unstack"
  ],
  "keras.engine": [
    "engine InputLayer",
    "engine ModelLayer",
    "engine Sequential"
  ],
  "keras.layers": [
    "layers Activation",
    "layers BatchNormalization",
    "layers Bidirectional",
    "layers Conv1D",
    "layers Conv2D",
    "layers Conv3D",
    "layers Convolution",
    "layers Dense",
    "layers Dropout",
    "layers Embedding",
    "layers Flatten",
    "layers InputLayer",
    "layers Lambda",
    "layers LSTM",
    "layers MaxPooling1D",
    "layers MaxPooling2D",
    "layers MaxPooling3D",
    "layers Merge",
    "layers Recurrent",
    "layers SeparableConv2D",
    "layers TimeDistributed"
  ],
  "keras.optimizers": [
    "optimizers Adam",
    "optimizers Nadam",
    "optimizers RMSprop"
  ],
  "keras.preprocessing": [
    "sequence pad_sequences"
  ],
  "keras.utils": [
    "data_utils get_file"
  ]
}